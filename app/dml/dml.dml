package models;

enum models.connection.ConnectionState as ConnectionState;

valueType java.security.KeyPair as KeyPair {
    externalizeWith{
        bytearray models.core.Externalization.externalizeKeyPair();
    }
    internalizeWith models.core.Externalization.internalizeKeyPair();
}

valueType org.joda.time.Duration as Duration {
    externalizeWith {
        Long getMillis();
    }
}

valueType models.GPS as GPS {
    externalizeWith{
        String toString();
    }
}

/* Classes*/

class PassportInstance {
    String instanceUrl;
    String instanceAPIUrl;
}

class User {
    String username;
    String registryEmail;
    String password;
    String salt;
}

class Party {
    String rri;
    String name;
    String logoUrl;
}

    class SocialNetwork extends Party {
    }

    class Hacker extends Party {
        DateTime dateOfBirth;
        String sex;
        DateTime dateJoined;
        KeyPair keys;
    }

    class Hackerspace extends Party {
        String location;
        GPS gps;
        LocalDate dateFounded;
        KeyPair keys;
    }

    class Project extends Party{
        DateTime beginDate;
    }

    class Event extends Party{
        DateTime beginDate;
        DateTime endDate;
    }


class connection.Connection {
    ConnectionState state;
    DateTime creationDate;
    DateTime startDate;
    String rri;
    String description;
    DateTime endDate;
}


/*Relations*/

/*Relations to domain root*/

relation KnownUsers {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    User playsRole users{ multiplicity *; }
}

relation KnownHackerspaces {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    Hackerspace playsRole hackerspaces { multiplicity *; }
}
relation KnownHackers {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    Hacker playsRole hackers { multiplicity *; }
}
relation KnownEvents {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    Event playsRole events { multiplicity *; }
}
relation KnownProjects {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    Project playsRole projects { multiplicity *; }
}
relation KnownSocialNetworks {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    SocialNetwork playsRole socialNetworks { multiplicity *; }
}

relation KnownPassportInstances {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    PassportInstance playsRole passportInstances { multiplicity *;}
}
relation KnownConnections {
    .pt.ist.fenixframework.DomainRoot playsRole root;
    connection.Connection playsRole connections { multiplicity *; }
}

/*Relations between the system components and user interface*/

relation HackerUser {
    User playsRole user;
    Hacker playsRole hacker;
} 

/*Relations between the system components*/

relation ConnectionsPassportInstance {
    connection.Connection playsRole connections {multiplicity *;}
    PassportInstance playsRole instance;
}

relation PartiesPassportInstance {
    Party playsRole parties {multiplicity *;}
    PassportInstance playsRole instance;
}

relation ChildParty {
    connection.Connection playsRole parents {multiplicity *;}
    Party playsRole child;
}

relation ParentParty {
    connection.Connection playsRole childs {multiplicity *;}
    Party playsRole parent;
}
